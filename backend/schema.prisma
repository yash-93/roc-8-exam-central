// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id               String  @id @default(cuid())
  name             String  @default("")
  slug             String  @default("")
  email            String  @unique @default("")
  avatar_filesize  Int?
  avatar_extension String?
  avatar_width     Int?
  avatar_height    Int?
  avatar_id        String?
  password         String
  role             String  @default("regular")
  status           String  @default("active")
  reasonFlagged    String  @default("")
  bookmarks        Paper[] @relation("User_bookmarks")
  papers           Paper[] @relation("Paper_uploadedBy")
}

model University {
  id                    String   @id @default(cuid())
  name                  String   @default("")
  city                  String   @default("")
  state                 String   @default("")
  country               String   @default("")
  banner_filesize       Int?
  banner_extension      String?
  banner_width          Int?
  banner_height         Int?
  banner_id             String?
  logo_filesize         Int?
  logo_extension        String?
  logo_width            Int?
  logo_height           Int?
  logo_id               String?
  status                String?
  courses               Course[] @relation("Course_university")
  from_Paper_university Paper[]  @relation("Paper_university")
}

model Course {
  id             String      @id @default(cuid())
  name           String      @default("")
  status         String?
  courseCode     String      @default("")
  duration       Float
  noOfSemester   Int?
  semesterSystem String?     @default("2")
  papers         Paper[]     @relation("Paper_course")
  university     University? @relation("Course_university", fields: [universityId], references: [id])
  universityId   String?     @map("university")

  @@index([universityId])
}

model Paper {
  id                  String            @id @default(cuid())
  name                String            @default("")
  paperCode           String            @default("")
  year                Int
  semester            Int?
  uploadedBy          User?             @relation("Paper_uploadedBy", fields: [uploadedById], references: [id])
  uploadedById        String?           @map("uploadedBy")
  type                String?           @default("university")
  flag                String?           @default("none")
  status              String?           @default("draft")
  isActive            String?           @default("active")
  original_filesize   Int?
  original_filename   String?
  source_filesize     Int?
  source_filename     String?
  university          University?       @relation("Paper_university", fields: [universityId], references: [id])
  universityId        String?           @map("university")
  course              Course?           @relation("Paper_course", fields: [courseId], references: [id])
  courseId            String?           @map("course")
  competitivePaper    CompetitivePaper? @relation("Paper_competitivePaper", fields: [competitivePaperId], references: [id])
  competitivePaperId  String?           @map("competitivePaper")
  from_User_bookmarks User[]            @relation("User_bookmarks")

  @@index([uploadedById])
  @@index([universityId])
  @@index([courseId])
  @@index([competitivePaperId])
}

model CompetitivePaper {
  id     String  @id @default(cuid())
  name   String  @default("")
  slug   String  @default("")
  papers Paper[] @relation("Paper_competitivePaper")
}
